/* Automatically generated nanopb header */
/* Generated by nanopb-0.2.4-dev at Thu Sep 26 18:56:18 2013. */

#ifndef _PB_MESSAGES_PB_H_
#define _PB_MESSAGES_PB_H_
#include <pb.h>

#include "nanopb.pb.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _Info {
    char version[5];
} Info;

typedef struct {
    size_t size;
    uint8_t bytes[6];
} Settings_data_gears_ratio_t;

typedef struct {
    size_t size;
    uint8_t bytes[5];
} Settings_data_gears_cut_time_t;

typedef struct {
    size_t size;
    uint8_t bytes[6];
} Settings_data_tc_gear_trim_t;

typedef struct _Settings_data {
    uint32_t functions;
    uint32_t cut_type;
    uint32_t sensor_threshold;
    uint32_t slip_threshold;
    uint32_t sensor_gain;
    uint32_t sensor_direction;
    uint32_t min_speed;
    uint32_t min_rpm;
    Settings_data_gears_ratio_t gears_ratio;
    Settings_data_gears_cut_time_t gears_cut_time;
    Settings_data_tc_gear_trim_t tc_gear_trim;
} Settings_data;

typedef struct _light_settings_t {
    uint32_t state;
    uint32_t duration;
} light_settings_t;

typedef struct _sensors_t {
    uint32_t rpm;
    uint32_t speed;
    uint32_t strain_gauge;
    uint32_t tc_switch;
    uint32_t vbat;
} sensors_t;

typedef struct _status_t {
    bool shifting;
    bool slipping;
    uint32_t slipping_pct;
    uint32_t acceleration;
} status_t;

typedef struct _settings_t {
    Settings_data data;
    uint32_t CRCValue;
} settings_t;

/* Default values for struct fields */

/* Field tags (for use in manual encoding/decoding) */
#define Info_version_tag                         1
#define Settings_data_functions_tag              1
#define Settings_data_cut_type_tag               2
#define Settings_data_sensor_threshold_tag       3
#define Settings_data_slip_threshold_tag         4
#define Settings_data_sensor_gain_tag            5
#define Settings_data_sensor_direction_tag       6
#define Settings_data_min_speed_tag              7
#define Settings_data_min_rpm_tag                8
#define Settings_data_gears_ratio_tag            9
#define Settings_data_gears_cut_time_tag         10
#define Settings_data_tc_gear_trim_tag           11
#define light_settings_t_state_tag               1
#define light_settings_t_duration_tag            2
#define sensors_t_rpm_tag                        1
#define sensors_t_speed_tag                      2
#define sensors_t_strain_gauge_tag               3
#define sensors_t_tc_switch_tag                  4
#define sensors_t_vbat_tag                       5
#define status_t_shifting_tag                    1
#define status_t_slipping_tag                    2
#define status_t_slipping_pct_tag                3
#define status_t_acceleration_tag                4
#define settings_t_data_tag                      1
#define settings_t_CRCValue_tag                  2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Info_fields[2];
extern const pb_field_t sensors_t_fields[6];
extern const pb_field_t Settings_data_fields[12];
extern const pb_field_t settings_t_fields[3];
extern const pb_field_t status_t_fields[5];
extern const pb_field_t light_settings_t_fields[3];

/* Maximum encoded size of messages (where known) */
#define Info_size                                7
#define sensors_t_size                           30
#define Settings_data_size                       71
#define settings_t_size                          79
#define status_t_size                            16
#define light_settings_t_size                    12

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
